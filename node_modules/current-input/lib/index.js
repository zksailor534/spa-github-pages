'use strict';

var _detectIt = require('detect-it');

var _detectIt2 = _interopRequireDefault(_detectIt);

var _theListener = require('the-listener');

var _theListener2 = _interopRequireDefault(_theListener);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function setupCurrentInput() {
  var body = document.querySelector('body');
  var currentInput = undefined;

  // set current input class on body
  function updateCurrentInput(input) {
    if (input !== currentInput) {
      body.classList.remove('current-input-' + currentInput);
      body.classList.add('current-input-' + input);
      currentInput = input;
    }
  }

  // setup based on device type
  if (_detectIt2.default.deviceType === 'mouseOnly') updateCurrentInput('mouse');else if (_detectIt2.default.deviceType === 'touchOnly') {
    updateCurrentInput('touch');
    // add blank touch listener to body to enable :active state when touching the screen
    (0, _theListener2.default)(body, { 'touchstart passive capture': function touchstartPassiveCapture() {} });
  } else {
    // add listeners for hybrid device
    (0, _theListener2.default)(window, {
      'touchstart passive capture': function touchstartPassiveCapture() {
        updateCurrentInput('touch');
      },

      /**
       * Have to use mousemove listener because on hybrid chrome
       * touch events cause the mouse to disappear (good), and it doesn't
       * reappear until it's moved (good), but it only fires mousemove
       * events without firing a mouseenter event, despite re-entering the screen.
       * Note that MS Edge fires a pointerenter event when the mouse reappears,
       * so there is no need to set a pointermove listener.
       */
      'mousedown mouseenter mousemove passive capture': function mousedownMouseenterMousemovePassiveCapture() {
        updateCurrentInput('mouse');
      }
    }, { pointermove: false });

    // set initial current input state based on if the primary input can hover
    /* eslint no-unused-expressions: ["error", { "allowTernary": true }] */
    _detectIt2.default.primaryHover === 'hover' ? updateCurrentInput('mouse') : updateCurrentInput('touch');
  }

  // remove event listener set by launcher (if no event listener was set this does nothing)
  document.removeEventListener('DOMContentLoaded', setupCurrentInput);
}

// launcher - calls setupCurrentInput() only after have access to the body
(function () {
  var body = document.querySelector('body');
  if (body) setupCurrentInput();else document.addEventListener('DOMContentLoaded', setupCurrentInput);
})();